name: DBT Main Branch dev Tests

on:
  workflow_dispatch:
  push:
    branches:
      - '**' # Include all branches
      - '!main' # Exclude the main branch

jobs:
  ci_checks_test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    # ðŸŽ¯ Define the path to your nested dbt project folder
    env:
      DBT_PROJECT_ROOT: './snowflake'
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      # --- 1. Setup Environment ---
      - name: Install Python and dbt
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # Use your preferred Python version
          
      - name: Install dbt and Adapter
        run: pip install dbt-core==1.8.0 dbt-snowflake # Adjust dbt version/adapter if necessary

      # --- 2. Inject Credentials (CI uses test secrets) ---
      - name: Set CI Environment Variables
        run: |
          # These secrets must be defined in your GitHub Repository Secrets
          echo "DBT_SNOWFLAKE_PASS=${{ secrets.DBT_SNOWFLAKE_PASS }}" >> $GITHUB_ENV

      # --- 3. Execute DBT Commands ---
      # Crucially, all dbt commands must be executed from the nested 'snowflake' directory.
      
      - name: Install dbt packages (dbt deps)
        run: dbt deps
        working-directory: ${{ env.DBT_PROJECT_ROOT }} # âœ… Directs command to the nested folder

      - name: Run Models and Tests (dev
        # Use 'dbt build' to run models, seeds, and tests sequentially.
        # The '--target ci' profile must be set up in your profiles.yml.
        run: dbt build --target dev
        working-directory: ${{ env.DBT_PROJECT_ROOT }} # âœ… Directs command to the nested folder
        
      # --- 4. Send Notification on Failure ---
      - name: Notify on Failure
        if: ${{ always() && failure() }}
        run: echo "ðŸš¨ DBT CI build failed on main branch (Commit ${{ github.sha }})." # Integrate with Slack/Email here
